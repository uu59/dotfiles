# vim: set ft=zsh:

prompt_test2_setup () {
  # .zsh/functions
  . ${ZDOTDIR:-$HOME/.zsh/}functions

  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info
  zstyle ':vcs_info:*' max-exports 2
  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' formats '%b'
  # %m is expanded to empty string if hg-mg/stgit are unavailable
  zstyle ':vcs_info:*' actionformats '%b' ' %%F{189%}⚑ %a%%f'

  PROMPT2="%B%{%F{082%}%__> %b"

  add-zsh-hook precmd _test2_update_prompt
  add-zsh-hook precmd _test2_cleanup_hooks
}


_test2_cleanup_hooks () {
  if [ "$prompt_theme" != "test2" ];then
    add-zsh-hook -d precmd _test2_update_prompt
    add-zsh-hook -d precmd _test2_cleanup_hooks
  fi
}

_test2_update_prompt () {
  local left_prompt
  local right_prompt

  left_prompt+="%F{190%}%~%f "

  LANG=C vcs_info
  # 0: main
  # 1: rebase/merge
  if [ -n "$vcs_info_msg_0_" ];then
    local branch="$vcs_info_msg_0_"
    local branchinfo
    local gitdir=$(git rev-parse --git-dir)
    local upstream=$(__git_upstream)
    if [[ -n $upstream ]];then
      # distance between local..remote branches
      local distance=""
      local distance_cache_file="$gitdir/prompt.distance"
      local is_cache_fresh=1
      for file in index FETCH_HEAD logs/HEAD; do
        [[ $is_cache_fresh == 1 && -f $distance_cache_file && $gitdir/$file -nt $distance_cache_file ]] && is_cache_fresh=0
      done

      if [[ $is_cache_fresh == 1 && -f $distance_cache_file ]];then
        read distance < $distance_cache_file
      else
        local ahead="$(command git rev-list $upstream..$branch | wc -l | sed 's/ //g')" # sed for OSX
        if [[ $ahead -eq 0 ]];then
          local behind="$(command git rev-list $branch..$upstream | wc -l | sed 's/ //g')" # sed for OSX
          [[ $behind -gt 0 ]] && distance="[-${behind}]"
        else
          distance="[+${ahead}]"
        fi
        echo $distance > $distance_cache_file
      fi

      branchinfo="-> $upstream ${distance}%F{248%} ($(__git_current_remote_url))%f"
    fi
    left_prompt+="%F{225%}$(__is_git_dirty && printf "⚶  ")%f%F{255%}${branch}${branchinfo}%f"
    if [[ -n $vcs_info_msg_1_ ]];then
      left_prompt+="${vcs_info_msg_1_}"
    fi
  fi

  PROMPT=$'\n'"${left_prompt}"$'\n'"%F{250%}%(!.#.$) %f"

  right_prompt+="%{%F{244%}ruby $(__ruby_version)%f"
  RPROMPT=$right_prompt
}


prompt_test2_setup "$@"
