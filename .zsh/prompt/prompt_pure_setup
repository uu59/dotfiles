# vim: set ft=zsh:

# Pure
# by Sindre Sorhus
# https://github.com/sindresorhus/pure
# MIT License

# Modified for zsh prompt compatible by uu59

# Change this to your own username
: ${DEFAULT_USERNAME::=nyaran}

# Threshold (sec) for showing cmd exec time
: ${CMD_MAX_EXEC_TIME::=5}

[ $USER != $DEFAULT_USERNAME ] && PROMPT_USERNAME='%n@%m '

# For my own and others sanity
# git:
# %b => current branch
# %a => current action (rebase/merge)
# prompt:
# %F => color dict
# %f => reset color
# %~ => current path
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)


# Fastest possible way to check if repo is dirty
git_dirty() {
	# check if we're in a git repo
	command git rev-parse --is-inside-work-tree &>/dev/null || return
	# check if it's dirty
	command git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ] && echo '*'
}

# Displays the exec time of the last command if set threshold was exceeded
cmd_exec_time() {
	local stop=`date +%s`
	local start=${cmd_timestamp:-$stop}
	let local elapsed=$stop-$start
	[ $elapsed -gt $CMD_MAX_EXEC_TIME ] && echo ${elapsed}s
}


pure_preexec() {
	cmd_timestamp=`date +%s`
}

pure_precmd() {
	LANG=C vcs_info
	# Add `%*` to display the time
	print -P '\n%F{blue}%~%F{236}$vcs_info_msg_0_`git_dirty` ${PROMPT_USERNAME}%f %F{yellow}`cmd_exec_time`%f'
	# Reset value since `preexec` isn't always triggered
	unset cmd_timestamp
}

_pure_cleanup_hooks () {
  if ! (prompt -c | grep -q -F -w pure); then
    add-zsh-hook -d precmd pure_precmd
    add-zsh-hook -d preexec pure_preexec
    add-zsh-hook -d preexec _pure_cleanup_hooks
    return
  fi
}

prompt_pure_setup() {
  autoload -Uz vcs_info
  zstyle ':vcs_info:*' enable git # You can add hg too if needed: `git hg`
  zstyle ':vcs_info:*' formats ' %b'
  zstyle ':vcs_info:*' actionformats ' %b|%a'

  # enable prompt substitution
  setopt PROMPT_SUBST

  # Only show username if not default
  [ $USER != $DEFAULT_USERNAME ] && local username='%n@%m '

  # Prompt turns red if the previous command didn't exit with 0
  PROMPT='%(?.%F{magenta}.%F{red})❯%f '
  # Can be disabled:
  # PROMPT='%F{magenta}❯%f '

  RPROMPT="" # initialize

  autoload -Uz add-zsh-hook
  add-zsh-hook precmd pure_precmd
  add-zsh-hook preexec pure_preexec
  add-zsh-hook preexec _pure_cleanup_hooks
}

prompt_pure_setup "$@"
